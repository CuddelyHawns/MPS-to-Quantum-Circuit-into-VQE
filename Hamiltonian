### Create an equivalent hamiltonian in Qiskit in terms of SparsePauliOp. We use this hamiltonian to benchmark the theoretical groundstate value by computing its state vector.
### The hamiltonian is also used to generate standard Ansatzs in Qiskit: 


def xyz_hamiltonian(N, Jx, Jy, Jz, h):
    pauli_labels = []
    coeffs = []
    
    
    for j in range(N-1):
        
        label = ['I'] * N
        label[j], label[j+1] = 'X', 'X'
        pauli_labels.append(''.join(label))
        coeffs.append(Jx/4)
        
        
        label = ['I'] * N
        label[j], label[j+1] = 'Y', 'Y'
        pauli_labels.append(''.join(label))
        coeffs.append(Jy/4)
        
        
        label = ['I'] * N
        label[j], label[j+1] = 'Z', 'Z'
        pauli_labels.append(''.join(label))
        coeffs.append(Jz/4)
    
   
    for j in range(N):
        label = ['I'] * N
        label[j] = 'X'
        pauli_labels.append(''.join(label))
        coeffs.append(-h/2)
    
    return SparsePauliOp(pauli_labels, coeffs)

N  = 6  # number of qubits
Jx = 5.0      # Sx–Sx coupling
Jy = 6.0       # Sy–Sy coupling
Jz = 5.0       # Sz–Sz coupling
h  = 0.5       # transverse field

hamiltonian = xyz_hamiltonian(N, Jx, Jy, Jz, h)
